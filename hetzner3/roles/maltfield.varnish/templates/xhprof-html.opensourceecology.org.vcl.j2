# {{ ansible_managed }}

################################################################################
# File:    xhprof-html.opensourceecology.org.vcl
# Version: 0.2
# Purpose: Config file for xhprof-html.opensourceecology.org
# Author:  Michael Altfield <michael@michaelaltfield.net>
# Created: 2022-05-26
# Updated: 2024-09-12
################################################################################

vcl 4.0;

##########################
# VHOST-SPECIFIC BACKEND #
##########################

backend xhprof-html_opensourceecology_org {
	.host = "127.0.0.1";
	.port = "8000";
}

#####################################################################
# STUFF MOSTLY COPIED FROM vcaching WORDPRESS PLUGIN                #
# https://plugins.svn.wordpress.org/vcaching/trunk/varnish-conf/v4/ #
#####################################################################

sub vcl_recv {

	if ( req.http.host == "xhprof-html.opensourceecology.org" ){

		set req.backend_hint = xhprof-html_opensourceecology_org;

  		# This uses the ACL action called "purge". Basically if a request to
		# PURGE the cache comes from anywhere other than localhost, ignore it.
  		if (req.method == "PURGE") {
  			if (!client.ip ~ purge) {
  				return (synth(405, "Not allowed."));
  			} else {
  				return (purge);
  			}
  		}

  		# Pass requests that Varnish does not understand straight to backend
  		if (
		 req.method != "GET" && req.method != "HEAD" &&
		 req.method != "PUT" && req.method != "POST" &&
		 req.method != "TRACE" && req.method != "OPTIONS" &&
		 req.method != "DELETE"
		) {
  			return (pipe);
  		} /* Non-RFC2616 or CONNECT which is weird. */

  		# Pass anything other than GET and HEAD directly.
  		if (req.method != "GET" && req.method != "HEAD") {
  			return (pass);
  		}      /* We only deal with GET and HEAD by default */

  		# Pass requests from logged-in users directly.
  		if (req.http.Authorization || req.http.Authenticate || req.http.Cookie ~ "session" || req.http.Cookie ~ "SESS") {
  			return (pass);
		} /* Not cacheable by default */

	}
}

sub vcl_hash {

	if ( req.http.host == "xhprof-html.opensourceecology.org" ){

		# TODO

	}
}

sub vcl_backend_response {

	if ( beresp.backend.name == "xhprof-html_opensourceecology_org" ){

		# set minimum timeouts to auto-discard stored objects
		set beresp.grace = 120s;

		if (beresp.ttl < 48h) {
			set beresp.ttl = 48h;
		}       

		# Avoid caching error responses
		if ( beresp.status != 200 && beresp.status != 203 && beresp.status != 300 && beresp.status != 301 && beresp.status != 302 && beresp.status != 304 && beresp.status != 307 && beresp.status != 410 && beresp.status != 404 ) {
			set beresp.ttl   = 0s;
			set beresp.grace = 15s;
			return (deliver);
		}

		if (beresp.http.Set-Cookie) {
			set beresp.uncacheable = true;
			return (deliver);
		}

	}

}

sub vcl_synth {

	if ( req.http.host == "xhprof-html.opensourceecology.org" ){

		# TODO

	}

}

sub vcl_pipe {

	if ( req.http.host == "xhprof-html.opensourceecology.org" ){

		# TODO

	}
}

sub vcl_deliver {

	if ( req.http.host == "xhprof-html.opensourceecology.org" ){

		# TODO

	}
}
